from __future__ import annotations

import io
from aiogram import Router, F
from aiogram.types import Message, BufferedInputFile

from db.session import async_session
from crud.user_transactions import add_user
from crud.request_transactions import add_photo_request
from crud.save_transactions import save_output_to_db
from utils.image_generation import replicate_anime

photo_router = Router()


@photo_router.message(F.photo)
async def handle_photo(message: Message) -> None:
    """
    1. —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ (bytes)
    2. —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞—ë–º Request(status='processing')
    3. —à–ª—ë–º '–∂–¥–∏—Ç–µ‚Ä¶'
    4. –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –Ω–∞ Replicate ‚Üí –ø–æ–ª—É—á–∞–µ–º anime-bytes
    5. –æ–±–Ω–æ–≤–ª—è–µ–º Request (status='done'/'error')
    6. –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–ª–∏ –æ—à–∏–±–∫—É
    """
    bot = message.bot
    tg_id = str(message.from_user.id)
    photo = message.photo[-1]

    # 1. —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –∏–∑ Telegram
    tg_file = await bot.get_file(photo.file_id)
    buf = io.BytesIO()
    await bot.download_file(tg_file.file_path, destination=buf)
    jpeg_bytes = buf.getvalue()

    # 2. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å + –∑–∞–ø–∏—Å—å –∑–∞–ø—Ä–æ—Å–∞
    async with async_session() as session:
        user = await add_user(session, tg_id)
        req = await add_photo_request(
            session,
            user_id=user.user_id,
            photo_bytes=jpeg_bytes,
        )

    # 3. —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(
        "–§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ‚úÖ\n"
        "–†–∏—Å—É—é –∞–Ω–∏–º–µ-–≤–µ—Ä—Å–∏—é –≤ —Å—Ç–∏–ª–µ Ghibli, –ø–æ–¥–æ–∂–¥–∏—Ç–µ‚Ä¶"
    )

    # 4. –∑–∞–ø—Ä–æ—Å –∫ Replicate
    anime_bytes = await replicate_anime(jpeg_bytes)

    # 5. –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
    async with async_session() as session:
        await save_output_to_db(session, req.id, anime_bytes)

    # 6. –æ—Ç–≤–µ—Ç
    if anime_bytes:
        await message.answer_photo(
            BufferedInputFile(anime_bytes, filename="ghibli.png"),
            caption="–ì–æ—Ç–æ–≤–æ! üé®"
        )
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ üòî")
