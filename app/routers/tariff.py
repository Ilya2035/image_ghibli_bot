from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from keyboards.tariff_keyboards import kb_balance
from crud.get_balance_transactions import get_balance
from crud.user_transactions import add_tokens
from db.session import async_session

tariff_router = Router(name="tariff")


@tariff_router.message((F.text == "üí≥ –¢–∞—Ä–∏—Ñ—ã") | (F.text == "/tariff"))
async def tariff_entry(msg: Message) -> None:
    tokens = await get_balance(msg.from_user.id)
    await msg.answer(
        f"–ù–∞ –≤–∞—à–µ–º —Å—á—ë—Ç–µ <b>{tokens}</b> —Ç–æ–∫–µ–Ω–æ–≤.\n"
        "–ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–ø–æ–ª–Ω–∏—Ç—å¬ª, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –µ—â—ë.",
        reply_markup=kb_balance(),
    )


@tariff_router.callback_query(F.data == "topup")
async def topup(cb: CallbackQuery) -> None:
    async with async_session() as session:
        new_balance = await add_tokens(session, str(cb.from_user.id), amount=100)
        await session.commit()

    await cb.answer("–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ 100 —Ç–æ–∫–µ–Ω–æ–≤! üéâ")
    await cb.message.answer(
        f"–¢–µ–ø–µ—Ä—å —É –≤–∞—Å <b>{new_balance}</b> —Ç–æ–∫–µ–Ω–æ–≤.\n"
        "–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã",
    )
